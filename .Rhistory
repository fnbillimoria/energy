install.packages("swirl")
packages("swirl.R")
packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
dio
head()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
h<-12
abline(h=12)
hist(ppm)
hist(ppm, col="green")
rug(ppm)
low
high
his(ppm,col=green,)
his(ppm,col=green,breaks=100
)
hist(ppm,col=green,breaks=100)
hist(ppm,col=green,breaks=100)
hist(ppm,col=green,breaks=100)
sf
help
hist(ppm,col = "green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
pollution
names(pollution)
pollution$region
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25 ~ region, pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution,=="east")
east <- subset(pollution, region == "east")
head(east)
hist(east$25,col="green")
hist(east$pm25,col="green")
with(subset(pollution="west"),hist(pm25,col="green")
)
with(subset(pollution="west"),hist(pm25,col="green")
)
with(subset(pollution="west"),hist(pm25,col="green"))
ds
with
hist(subset(pollution=="west")$pm25,col="green"))
hist(subset(pollution,region=="west")$pm25, col = "green"))
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution,plot(latitude,pm25))
abline(v=12,lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$region,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.curr()
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.close("geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist)
)
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,state,c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data = mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)", col.axis = "Blue", col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)", col.axis = "blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par('fg')
(?pch)
?pch
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC"
)
subset(airquality,)
subset(airquality,month==5)
subset(airquality,Month==5)
may <- subset(airquality,Month==5)
with(may,plot(Wind,Ozone))
points(may$Wind,pay$Ozone,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
$pch
?pch
?pch
notmay<- subset(airquality,!may)
notmay<- subset(airquality,Month!=5)
plot(notmay$wind,notmay$Ozone,pch=32,col="red")
plot(notmay$wind, notmay$Ozone, pch=32, col="red")
plot(notmay$wind,notmay$Ozone,pch=32,col="red")
f
d
f
plot()
plot(notmay$Wind,notmay$Ozone,pch=32,col="red")
plot(notmay$Wind,notmay$Ozone,pch=8,col="red")
points(notmay$Wind,notmay$Ozone,pch=8,col="red")
legend("topright",pch=c[17,8],c("blue","red"),c("May","Other","Months"))
legend("topright",pch=c[17,8],c("blue","red"),c("May","Other Months"))
legend("topright",pch=c(17,8),legend=c("blue","red"),c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
ab
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow(c(1,2)))
par(mfrow=c(1,2))
points(airquality$Wind,airquality$Ozone)
points(airquality$Wind,airquality$Ozone, main = "Ozone and WInd")
points(airquality$Wind,airquality$Ozone, main = "Ozone and Wund")
points(airquality$Wind,airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind,airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar, main = "Ozone and Solar Radiation")
plot(airquality$Ozone,airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone,main="Ozone and Wind)
)
plot(airquality$Wind, airquality$Ozone,main="Ozone and Wind)
plot(airquality$Wind, airquality$Ozone,title(main="Ozone and Wind)
)
ds
3
32rjk
adsflkj
).
\
]
plot
3
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtet(Ozone and Weather in New York City",outer=TRUE)
mtext("Ozone and Weather in New York City",outer=TRUE)
pip install rpy2
python setup.py install.packages()
swirl()
load.packages("swirl")
load.packages("swirl.R")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month),airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month,airquality,layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors())
sample(colors(),10)
pa1 <- colorRamp(c("red","blue")
)
pa1 <- colorRamp(c("red","blue"))
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0
0xcc
p2 <- colorRampPalette("red","yellow")
p2 <- colorRampPalette("red","yellow")
p2 <- colorRampPalette(c("red","yellow"))
p2
p2(2
)
p2(10)
showMe()
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
d
d
p2 <- colorRampPalette(c("red","yellow"))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
d
rbg()
plot(x,y,pch=19,co=c(0,.5,0.5))
d
d
plot(x,y,pch=19,co=c(0,.5,0.5))
plot(x,y,pch=19,col=c(0,.5,0.5))
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
brewer.pal(3,"BuGn")
cols <- brewer.pal(3,"BuGn")
showMe()
showMe(cv)
showMe(cv)d
d
showMe(cv)d
showMe(cv)
showMe(cols)
pal <- colorRampPalette(cols)
showme(pal(3))
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,mpg)
e
data
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg,color=drv)
qplot(displ, hwy, data = mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,color=drv)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hw,data=mpg,facets = .~drv
)
qplot(displ,hw,data=mpg,facets = .~drv)
qplot(displ,hw,data=mpg,facets = . ~ drv)
qplot(displ,hw,data=mpg,facets = ". ~ drv")
qplot(displ,hw,data=mpg,facets = ". ~ drv")
dsa
help
qplot(displ,hwy,data=mpg,facets = ". ~ drv")
qplot(displ,hwy,data=mpg,facets = . ~ drv)
qplot(hwy,data=mpg,facets = ~ . drv)
qplot(hwy,data=mpg,facets = ~ . drv,binwidth=2)
qplot(hwy,data=mpg,facets = drv ~ .,binwidth=2)
getwd()
setwd("~/Documents/energy_project")
unlink("CopyofFilelist_Archive.csv")
dayfile <- read.csv("PUBLIC_DAILY_201511210000_20151122040501.csv",skip=1,header=TRUE)
head(dayfile)
dayfile <- dayfile(dayfile$DISPATCH="DUNIT")
dayfile <- dayfile[dayfile$DISPATCH=="DUNIT"]
head(dayfile$DISPATCH)
head(dayfile$DISPATCH[1])
head(dayfile)
head(dayfile$DISPATCH)
dayfile <- dayfile[dayfile$DISPATCH=="TUNIT"]
dayfile <- dayfile[dayfile$DISPATCH[] == "TUNIT"]
dayfile <- dayfile[dayfile == "TUNIT"]
dayfile
dayfile <- read.csv("PUBLIC_DAILY_201511210000_20151122040501.csv",skip=1,header=TRUE)
View(dayfile)
size(dayfile)
object.size(dayfile)
tunits <- subset(dayfile,DISPATCH== "TUNIT",c(SETTLEMENTDATE,INTERVENTION,INITIALMW))
tunits <- subset(dayfile,DISPATCH== "TUNIT",c(SETTLEMENTDATE,INTERVENTION,CASESUBTYPE))
object.size
object.size(tunits)
tunits
head(tunits)
names(tunits)<-tunits[1,]
head(tunits)
tunits[1,]
names()
names(tunits)<-as.character(tunits[1,])
head(tunits)
names(tunits)
tunits[1,]
as.character(tunits[1,])
as.character(tunits[0,])
as.character(tunits[2,])
as.character(tunits[1,1])
as.character(tunits[2,1])
as.character(tunits[1,2])
as.character(tunits[1,])
as.character(tunits[1,3])
as.character(tunits[1,4])
a <- tunits[[1][1]]
tunits[3,0]
tunits[3,1]
tunits[2,1]
tunits
head(tunits)
tunits[1,]
tunits[1,]
colnames(tunits)<- tunits[1,]
head(tunits)
tunits[1,]
names(tunits)<- tunits[1,]
tunits
names(tunits)
tunits
head.tunits
head(tunits)
tunits[1,]
tunits[1,1]
object.size(tunits)
object.size(tunits)*365
*2
object.size(tunits)*365*2
tunits$`1052`<-
strptime(tunits$`1052`,"%Y/%M/%D %H:%M:%S")
warnings()
tunits()
tunits
unlink(dayfile)
View(dayfile)
remove(dayfile)
dayfile
a
object.size(tunits)*365
object.size(tunits)*365/1000000
dayfile
install.packages("XML")
library(XML)
Curr_url <- "http://www.nemweb.com.au/REPORTS/CURRENT/Daily_Reports/"
Curr_parsed <- htmlParse(Curr_url)
links <- xpathSApply(parsed, "//@href")
links <- xpathSApply(Curr_parsed, "//@href")
links
links [1,]
links [1]
links [2]
source("Download_Files2.R")
getwd()
ls
ls()
dir()
source("Download_Files2.R")
source("Download_Files2.R")
source("Download_Files2.R")
source("Download_Files2.R")
Curr_links
source("Download_Files2.R")
Curr_links
source("Download_Files2.R")
source("Download_Files2.R")
source("Download_Curr.R")
Latest_link
source("Download_Curr.R")
source("Download_Curr.R")
Latest_link
source("Download_Curr.R")
source("Download_Curr.R")
source("Download_Curr.R")
source("Download_Curr.R")
Curr_file
source("Download_Curr.R")
source("Download_Curr.R")
head(tunits)
source("Download_Curr.R")
head(Curr_file)
source("Download_Curr.R")
head(Curr_file)
tunits <- subset(dayfile,DISPATCH== "TUNIT",c(SETTLEMENTDATE,INTERVENTION,INITIALMW))
source("Download_Curr.R")
head(Curr_file)
source("Download_Curr.R")
